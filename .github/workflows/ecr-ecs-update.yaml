name: update ecr and ecs

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::124355670580:role/github-oidc
          aws-region: us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        run: |
          IMAGE_TAG=latest
          REPO_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}
          docker build -t $REPO_URI:$IMAGE_TAG .
          echo "Image tagged as $REPO_URI:$IMAGE_TAG"

      - name: Push Docker image to Amazon ECR
        run: |
          IMAGE_TAG=latest
          REPO_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ secrets.AWS_ECR_REPOSITORY }}
          docker push $REPO_URI:$IMAGE_TAG

      - name: Update task def
        run: |
          TASK_NAME=greeter-5000
          SERVICE_NAME=greeter-lb
          IMAGE_NAME=greeting-app/hello-world655
          CLUSTER_NAME=test-greeter-cluster
          REGION=us-east-1
          ACCOUNT_NUMBER=${{ secrets.AWS_ACCOUNT_ID }}

          NEW_IMAGE=$ACCOUNT_NUMBER.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$TASK_NAME" --region "$REGION")
          NEW_TASK_DEFINITION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$NEW_IMAGE" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
          NEW_REVISION=$(aws ecs register-task-definition --region "$REGION" --cli-input-json "$NEW_TASK_DEFINITION")
          NEW_REVISION_DATA=$(echo $NEW_REVISION | jq '.taskDefinition.revision')

          NEW_SERVICE=$(aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $TASK_NAME --force-new-deployment)

          echo "done"
          echo "${TASK_NAME}, Revision: ${NEW_REVISION_DATA}"

      - name: Update ECS
        run: |
          aws ecs update-service \
            --cluster test-greeter-cluster \
            --service greeter-lb \
            --force-new-deployment

      # Validate the API
      - name: Validate API
        run: |
          API_URL="http://http://greeter-lb-1024125928.us-east-1.elb.amazonaws.com/validate"
          RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null $API_URL)

          if [ "$RESPONSE" -eq 200 ]; then
            echo "API Validation Successful"
          else
            echo "API Validation Failed with status code: $RESPONSE"
            exit 1
          fi
